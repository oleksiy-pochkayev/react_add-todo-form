{"version":3,"sources":["api/users.ts","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","TodoList","completeToggle","todoWithUsers","todoList","map","todo","user","usersFromServer","find","userId","className","type","onClick","title","completed","src","alt","TodoForm","state","selectError","titleError","titleChange","event","isValid","target","value","replaceAll","setState","validation","length","props","addTodo","action","method","onSubmit","preventDefault","this","htmlFor","placeholder","onChange","Number","disabled","React","Component","todos","App","todosList","todosFromServer","todoId","newTodo","ReactDOM","render","document","getElementById"],"mappings":"iQAyOeA,G,YAzOD,CACZ,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,yCACbC,GAAI,gCAGR,CACEhB,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,eACNc,YAAa,iCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,qBACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,YACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,iBACPC,QAAS,cACTC,QAAS,CACPb,KAAM,qBACNc,YAAa,oCACbC,GAAI,oCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,4BACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,WACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,2CACbC,GAAI,yCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,2BACPC,QAAS,CACPC,OAAQ,eACRC,MAAO,YACPC,KAAM,aACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,gBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,cACNc,YAAa,uCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,WACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,uBACPC,QAAS,UACTC,QAAS,CACPb,KAAM,oBACNc,YAAa,qCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,YACRC,MAAO,YACPC,KAAM,YACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,WACTC,QAAS,CACPb,KAAM,cACNc,YAAa,qCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,uBACPC,QAAS,CACPC,OAAQ,mBACRC,MAAO,YACPC,KAAM,YACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,gCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,YACPC,KAAM,iBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,uBACPC,QAAS,aACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,wCACbC,GAAI,qCAGR,CACEhB,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,kBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,cACTC,QAAS,CACPb,KAAM,aACNc,YAAa,oCACbC,GAAI,+B,OC3NGC,EAA4B,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,eACpCC,EADmE,EAAfC,SAC3BC,KAAI,SAACC,GAClC,OAAO,2BACFA,GADL,IAEEC,KAAMC,EAAgBC,MAAK,SAAAF,GAAI,OAAIA,EAAKvB,KAAOsB,EAAKI,WAAW,UAInE,OACE,oBAAIC,UAAU,aAAd,SAEIR,EAAcE,KAAI,SAACC,GAAU,IAAD,IAC1B,OACE,oBAEEK,UAAU,aAFZ,SAIE,yBACEC,KAAK,SACLD,UAAU,eACVE,QAAS,WACPX,EAAeI,EAAKtB,KAJxB,UAOE,sBAAK2B,UAAU,aAAf,UACE,wCAAML,EAAKC,YAAX,aAAM,EAAWtB,OACjB,qBAAK0B,UAAU,cAAf,mBAA8BL,EAAKC,YAAnC,aAA8B,EAAWpB,WAE3C,qBAAKwB,UAAU,oBAAf,SAAoCL,EAAKQ,QACzC,qBAAKH,UAAU,kBAAf,SAEIL,EAAKS,UACD,qBAAKJ,UAAU,cAAcK,IAAI,oBAAoBC,IAAI,cACzD,qBAAKN,UAAU,cAAcK,IAAI,qBAAqBC,IAAI,sBAnB/DX,EAAKtB,UCTXkC,EAAb,4MACEC,MAAQ,CACNL,MAAO,GACPJ,OAAQ,EACRU,YAAa,KACbC,WAAY,MALhB,EAQEC,YAAc,SAACC,GACb,IAAMC,EAAUD,EAAME,OAAOC,MAAMC,WAAW,6DAAgC,IAE9E,EAAKC,SAAS,CAAEd,MAAOU,EAASH,WAAY,QAXhD,EAcEQ,WAAa,WACqB,IAA5B,EAAKV,MAAML,MAAMgB,OAMK,IAAtB,EAAKX,MAAMT,QAMf,EAAKqB,MAAMC,QAAQ,EAAKb,MAAMT,OAAQ,EAAKS,MAAML,OAEjD,EAAKc,SAAS,CACZd,MAAO,GACPJ,OAAQ,EACRU,YAAa,KACbC,WAAY,QAXZ,EAAKO,SAAS,CAAER,YAAa,yBAN7B,EAAKQ,SAAS,CAAEP,WAAY,4BAhBlC,4CAqCE,WAAU,IAAD,OACP,OACE,uBACEV,UAAU,aACVsB,OAAO,GACPC,OAAO,MACPC,SAAU,SAACZ,GACTA,EAAMa,kBALV,UAQIC,KAAKlB,MAAME,YAET,mBAAGV,UAAU,cAAb,SACG0B,KAAKlB,MAAME,aAIlB,uBAAOiB,QAAQ,QAAf,SACE,uBACE3B,UAAU,cACVC,KAAK,OACL3B,KAAK,QACLsD,YAAY,kBACZb,MAAOW,KAAKlB,MAAML,MAClB0B,SAAU,SAACjB,GACT,EAAKD,YAAYC,QAKvB,uBAAOe,QAAQ,SAAf,SACE,yBACE3B,UAAU,eACV1B,KAAK,SACLD,GAAG,SACH0C,MAAOW,KAAKlB,MAAMT,OAClB8B,SAAU,SAACjB,GACT,EAAKK,SAAS,CAAElB,OAAQ+B,OAAOlB,EAAME,OAAOC,OAAQN,YAAa,QANrE,UASE,wBAAQM,MAAM,IAAIgB,UAAQ,EAA1B,yBACClC,EAAgBH,KAAI,SAAAE,GAAI,OACvB,wBAAQmB,MAAOnB,EAAKvB,GAApB,SACGuB,EAAKtB,eAMZoD,KAAKlB,MAAMC,aAET,mBAAGT,UAAU,cAAb,SACG0B,KAAKlB,MAAMC,cAIlB,wBACET,UAAU,SACVC,KAAK,SACLC,QAASwB,KAAKR,WAHhB,6BA7FR,GAA8Bc,IAAMC,WCGrBC,EAfD,CACZ,CACEnC,OAAQ,EACR1B,GAAI,EACJ8B,MAAO,qBACPC,WAAW,GAEb,CACEL,OAAQ,EACR1B,GAAI,EACJ8B,MAAO,qCACPC,WAAW,ICAT+B,E,4MACJ3B,MAAQ,CACN4B,UAAWC,G,EAGb9C,eAAiB,SAAC+C,GAChB,EAAKrB,UAAS,SAAAT,GAAK,MAAK,CACtB4B,UAAW5B,EAAM4B,UAAU1C,KAAI,SAAAC,GAC7B,OAAI2C,IAAW3C,EAAKtB,GACXsB,EAGF,2BAAKA,GAAZ,IAAkBS,WAAYT,EAAKS,oB,EAKzCiB,QAAU,SAACtB,EAAgBI,GACzB,IAAMoC,EAAU,CACdxC,SACA1B,GAAI,EAAKmC,MAAM4B,UAAUjB,OAAS,EAClChB,QACAC,WAAW,GAGb,EAAKa,UAAS,SAAAT,GAAK,MAAK,CACtB4B,UAAU,GAAD,mBAAM5B,EAAM4B,WAAZ,CAAuBG,S,4CAIpC,WACE,IAAQH,EAAcV,KAAKlB,MAAnB4B,UAER,OACE,sBAAKpC,UAAU,MAAf,UACE,oBAAIA,UAAU,eAAd,2BAEA,cAAC,EAAD,CACEqB,QAASK,KAAKL,UAGhB,cAAC,EAAD,CACE5B,SAAU2C,EACV7C,eAAgBmC,KAAKnC,wB,GA3CbyC,IAAMC,WAkDTE,IC5DfK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.97126082.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  completeToggle: (id:number) => void;\n  todoList: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ completeToggle, todoList }) => {\n  const todoWithUsers = todoList.map((todo) => {\n    return {\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId) || null,\n    };\n  });\n\n  return (\n    <ul className=\"todo__list\">\n      {\n        todoWithUsers.map((todo) => {\n          return (\n            <li\n              key={todo.id}\n              className=\"todo__item\"\n            >\n              <button\n                type=\"button\"\n                className=\"todo__button\"\n                onClick={() => {\n                  completeToggle(todo.id);\n                }}\n              >\n                <div className=\"todo__info\">\n                  <div>{todo.user?.name}</div>\n                  <div className=\"todo__email\">{todo.user?.email}</div>\n                </div>\n                <div className=\"todo__description\">{todo.title}</div>\n                <div className=\"todo__completed\">\n                  {\n                    todo.completed\n                      ? <img className=\"todo__image\" src=\"./images/tick.png\" alt=\"completed\" />\n                      : <img className=\"todo__image\" src=\"./images/cross.png\" alt=\"in progress\" />\n                  }\n                </div>\n              </button>\n            </li>\n          );\n        })\n      }\n    </ul>\n  );\n};\n","import React from 'react';\nimport usersFromServer from '../../api/users';\n\ntype State = {\n  title: string,\n  userId: number,\n  selectError: string | null,\n  titleError: string | null,\n};\n\ntype Props = {\n  addTodo: (userId: number, title: string) => void;\n};\n\nexport class TodoForm extends React.Component<Props, State> {\n  state = {\n    title: '',\n    userId: 0,\n    selectError: null,\n    titleError: null,\n  };\n\n  titleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const isValid = event.target.value.replaceAll(/[^0-9a-zA-Z а-яА-ЯІі.,'!?@]/g, '');\n\n    this.setState({ title: isValid, titleError: null });\n  };\n\n  validation = () => {\n    if (this.state.title.length === 0) {\n      this.setState({ titleError: 'Please enter Your text' });\n\n      return;\n    }\n\n    if (this.state.userId === 0) {\n      this.setState({ selectError: 'Please choose a User' });\n\n      return;\n    }\n\n    this.props.addTodo(this.state.userId, this.state.title);\n\n    this.setState({\n      title: '',\n      userId: 0,\n      selectError: null,\n      titleError: null,\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"todo__form\"\n        action=\"\"\n        method=\"get\"\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        { this.state.titleError\n          && (\n            <p className=\"todo__error\">\n              {this.state.titleError}\n            </p>\n          )}\n\n        <label htmlFor=\"title\">\n          <input\n            className=\"todo__input\"\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Enter your text\"\n            value={this.state.title}\n            onChange={(event) => {\n              this.titleChange(event);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"userId\">\n          <select\n            className=\"todo__select\"\n            name=\"userId\"\n            id=\"userId\"\n            value={this.state.userId}\n            onChange={(event) => {\n              this.setState({ userId: Number(event.target.value), selectError: null });\n            }}\n          >\n            <option value=\"0\" disabled>Choose User</option>\n            {usersFromServer.map(user => (\n              <option value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        { this.state.selectError\n          && (\n            <p className=\"todo__error\">\n              {this.state.selectError}\n            </p>\n          )}\n\n        <button\n          className=\"button\"\n          type=\"submit\"\n          onClick={this.validation}\n        >\n          Add TODO\n        </button>\n      </form>\n    );\n  }\n}\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport './App.css';\nimport './Todo.css';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nimport todosFromServer from './api/todos';\n\ntype State = {\n  todosList: Todo[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    todosList: todosFromServer,\n  };\n\n  completeToggle = (todoId:number) => {\n    this.setState(state => ({\n      todosList: state.todosList.map(todo => {\n        if (todoId !== todo.id) {\n          return todo;\n        }\n\n        return { ...todo, completed: !todo.completed };\n      }),\n    }));\n  };\n\n  addTodo = (userId: number, title: string) => {\n    const newTodo = {\n      userId,\n      id: this.state.todosList.length + 1,\n      title,\n      completed: false,\n    };\n\n    this.setState(state => ({\n      todosList: [...state.todosList, newTodo],\n    }));\n  };\n\n  render() {\n    const { todosList } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__caption\">Add todo form</h1>\n\n        <TodoForm\n          addTodo={this.addTodo}\n        />\n\n        <TodoList\n          todoList={todosList}\n          completeToggle={this.completeToggle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}